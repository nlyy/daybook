Python3标准数据类型：
  number
  string
  list
  tuple
  sets
  dictionary

number数据类型包括：int、float、bool、complex
  注意事项：
      (1)可以用type()方法和isinstance()方法判断number的具体类型
      >>> a, b, c, d = 20, 5.5, True, 4+3j
      >>> print(type(a), type(b), type(c), type(d))
      <class 'int'> <class 'float'> <class 'bool'> <class 'complex'>

      >>>a = 111
      >>> isinstance(a, int)
      True
      isinstance 和 type 的区别在于：type()不会认为子类是一种父类类型；isinstance()会认为子类是一种父类类型
      (2)python可以同时为多个变量赋值，如a,b = 1,2
      (3)一个变量可以通过赋值指定不同类型的值
      (4)数值的除法（/）总是返回一个浮点数，要获取整数用（//）操作符
      (5)进行混合运算的时候，整数型默认转换成浮点型
      (6)python2中没有bool类型，它用1表示True，用0表示False，python3中True和False被定义成关键字，但是他们的值还是1和0，他们可以和数字相加

string类型
  注意事项：
      string类型前加‘r’或者‘R’表示表示原始字符串，会让字符串中的转义字符失效，展示它本来的样子
      string有两种索引方式：从左向右以0开始，从右向左以-1开始
      string的截取语法：
          str = 'lilith'
          print (str)          # 输出字符串
          print (str[0:-1])    # 输出第一个到倒数第二个的所有字符
          print (str[0])       # 输出字符串第一个字符
          print (str[2:5])     # 输出从第三个开始到第五个的字符
          print (str[2:])      # 输出从第三个开始的后的所有字符
          print (str * 2)      # 输出字符串两次
          print (str + "TEST") # 连接字符串

list类型（类似于JavaScript中的数组）
  注意事项：
      list截取语法：
          list = ['abcd', 786 , 2.23, 'runoob', 70.2]
          print (list)            # 输出完整列表
          print (list[0])         # 输出列表第一个元素
          print (list[1:3])       # 从第二个开始输出到第三个元素
          print (list[2:])        # 输出从第三个元素开始的所有元素
          print (tinylist * 2)    # 输出两次列表
          print (list + tinylist) # 连接列表
      list的元素可以被改变
      
 tuple元组类型：元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号(())里，元素之间用逗号隔开
  注意事项
      tuple的截取语法和List类似
      虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表
      构造包含 0 个或 1 个元素的元组比较特殊，所以有一些额外的语法规则：
          tup1 = ()    # 空元组
          tup2 = (20,) # 一个元素，需要在元素后添加逗号
          
 set集合：是一个无序不重复元素的序列，基本功能是进行成员关系测试和删除重复元素，可以使用大括号 { } 或者 set() 函数创建集合，创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。
		# set可以进行集合运算
		a = set('abracadabra')
		b = set('alacazam')

		print(a)		 #返回一个无序不重复列表{'b', 'r', 'd', 'a', 'c'}
		
		print(b)		 #返回一个无序不重复列表{'z', 'm', 'a', 'c', 'l'}
		
		print(a - b)     # a和b的差集{'b', 'd', 'r'}

		print(a | b)     # a和b的并集{'z', 'm', 'a', 'c', 'd', 'r', 'l', 'b'}

		print(a & b)     # a和b的交集{'a', 'c'}

		print(a ^ b)     # a和b中不同时存在的元素{'b', 'z', 'm', 'd', 'l', 'r'}
		
dictionary字典：（类似于JavaScript的对象object）
		字典是一种映射类型，它的元素是键值对。
		字典的关键字必须为不可变类型，且不能重复。
		创建空字典使用 { }。
		构造函数 dict() 可以直接从键值对序列中构建字典如下：
			 >>>dict([('Runoob', 1), ('Google', 2), ('Taobao', 3)])
			{'Taobao': 3, 'Runoob': 1, 'Google': 2}

			>>> {x: x**2 for x in (2, 4, 6)}
			{2: 4, 4: 16, 6: 36}

			>>> dict(Runoob=1, Google=2, Taobao=3)
			{'Taobao': 3, 'Runoob': 1, 'Google': 2}




















