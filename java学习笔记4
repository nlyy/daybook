1.成员变量和局部变量的关系：
	在类中的位置不同，
	在内存中的位置不同，
		成员变量：在堆中，
		局部变量：在栈中
	生命周期不同
		成员变量：随着对象的创建而存在，随着对象的消失而消失
		局部变量：随着方法的调用而存在，随着方法调用完毕而消失
	初始化值不同
		成员变量：有默认值
		局部变量：没有默认值，必须定义，赋值
2.类作为形式参数的问题
	如果一个方法需要一个参数是一个类名，说明这里在实际调用的时候要传一个具体的对象
3.匿名对象：没有名字的对象
	调用方法只调用一次时使用、作为实际参数传递
4.封装：
	隐藏实现细节，提供公共方法
	要用到private修饰词，是封装的一种体现
5.private关键字：私有
	可以修饰成员变量和成员方法
	被修饰的成员变量和成员方法只能在本类中被访问
	
6.this关键字：代表当前类的引用对象
	哪个对象调用方法，该方法内部的this就代表这个对象
7.构造方法：
	用于对对象的数据进行初始化
	格式：方法名和类名相同、没有返回值类型，连void也不能有、没有返回值
	注意事项
		如果没写构造方法，系统会提供一个默认的无参构造方法
		如果我们写了构造方法，系统将不会提供，
8.代码：Student s = new Student();做了哪些事情？
	把Student.class文件加载到内存，
	在栈内存为s开辟空间
	在堆内存为学生对象申请空间
	给学生的成员变量进行默认初始化：null、0
9.static关键字：
	静态的意思，可以修饰成员变量和成员方法
	特点：
		随着类的加载而加载，
		优先于对象存在，
		被类的所有对象共享，
		可以通过类名调用，
		静态的内容在方法区的静态区
	静态变量和成员变量的区别
		所属不同：静态变量属于类；成员变量属于对象，
		内存位置不同：静态变量在方法区的静态区，成员变量在堆内存，
		生命周期不同：静态变量随着类的加载而加载；成员变量是随着对象的创建而创建，随着对象的调用结束而消失
		调用不同：静态变量可以通过类名调用，也可以通过对象名调用
	注意事项：
		静态方法中没有this对象
	main方法是静态的
		public：权限最大
		static：不用创建对象调用
		void：返回值给jvm没有意义
		main:名称
		String[]:字符串类型的数组,可以接受数据，提高程序灵活性：java MainDemo hello world java
10.如何制作帮助文档
	javadoc -d 目录 -author -version 名称.java
11.学习jdk提供的API
	
12.代码块
	局部代码块：用于限定变量生命周期，及早释放，提高内存利用率
	构造代码块
	静态代码块：对类的数据进行初始化，仅仅只执行一次
	顺序：静态代码块》构造代码块》构造方法
13.继承
	格式：class 子类名 extends 父类名 {}
	特点：java中类只支持单继承
		java中可以多层继承
	注意事项：
		子类不能继承父类的私有成员
		子类不能继承父类的构造方法，可以通过super访问
		不要为了部分功能去继承
	继承中的成员关系
		成员变量：变量名称一样时采用就近原则；
		构造方法：子类的构造方法默认访问父类的无参构造方法，
		成员方法：方法名称一样时方法重载；
