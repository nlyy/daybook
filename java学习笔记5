1.final关键字
	最终的意思，可以修饰类，方法，变量，修饰的类不能被继承，修饰的方法不能被重写，修饰的变量是一个常量
	面试相关：
		局部变量：基本类型，只不能发生改变；引用类型，地址值不能发生改变，但对象的内容可以改变
	只能初始化一次
2.多态：同一个对象在不同时刻体现出来的不同状态
	前提：有继承和实现关系；有方法重写；有父类引用指向子类对象
	分类：
		具体类多态；
			class Fu{}
			class Zi extends Fu{}
			Fu f = new Zi();
		抽象类多态；
			abstract class Fu{}
			class Zi extends Fu{}
			Fu f = new Zi();
		接口多态;
			interface Fu{}
			class Zi implements Fu{}
			Fu f = new Zi();
	访问特点：
		成员变量：编译看左边，运行看左边
		构造方法：子类的构造都会默认访问父类构造
		成员方法：变异看左边，运行看右边（因为成员方法有重写，父类的成员方法被重写了。所以看右边）
		静态方法：编译看左边，运行看左边
	好处：
	弊端：
		父类不能使用子类的特有功能
		子可以当做父使用，父不能当子使用
	转型：
		向上转型：从子到父
		向下转型：从父到子
	
3.抽象类
	把多个共性的东西提取到一个类中，这是继承的做法，但是多个共性的东西，方法声明一样，方法体不一样，所以在定义这些共性的方法时，就不能给出具体的方法
	特点：
		抽象类和抽象方法必须用abstract修饰
		抽象类不一定有抽象方法，但是有抽象方法的一定是抽象类
		抽象类不能实例化
		抽象类的子类：是一个抽象类，
	成员特点：
		成员变量：有变量，有常量
		有构造方法
		成员方法：有抽象，有非抽象
	
4.接口：
	特点：
		用interface修饰：interface 接口名{}
		类实现接口用implements修饰：class 类名 implements 接口名{}
		接口不能实例化
		接口的实现类：



5.形式参数和返回值的问题
	形参：  类名：需要该类的对象
		抽象类名：需要该类的子类对象
		接口名：需要该接口的实现类对象
	返回值：类名：返回该类的对象
		抽象类名：返回该类的子类对象
		接口名：返回该接口的实现类对象
	链式编程：对象.方法1().方法2().方法3（）
		方法调用完毕以后，应该返回一个对象
6.导包
	包：其实就是文件夹；
		作用：区分同名的类，对类进行分类管理
	包的定义：package 包名；多级包用.分开
	导包：import 包名...
	
7.权限修饰符
	private：只在本类下访问
	默认：同一个包下
	protected
	public
	四种权限修饰符任意时刻只能出现一个
8.常见修饰符：
	权限修饰：private、默认、protected、public
	状态修饰：static、final
	抽象修饰：abstract
	
9.内部类



















