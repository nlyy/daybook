1.方法：
	方法就是完成特定功能的代码块；
	格式：修饰符 返回值类型 方法名（参数类型 参数1，参数类型 参数2，...）{
		方法体语句
		return 返回值；
	}
	参数分类：
		实参：实际参与运算的数据
		形参：方法上定义的，用于接收实际参数的变量
	明确：
		明确返回值类型：结果的数据类型
		明确参数列表：参数的个数以及对应的参数类型
	方法调用：
		有明确返回值的调用：推荐使用赋值调用：
		无返回值的调用：单独调用
2.数组：
	格式：  数据类型 [] 数据名称
		数据类型 数据名称 []

	栈：存储局部变量，数据使用完毕就消失；
	堆：存储所有new出来的对象，每一个new出来的东西都有地址，每一个变量都有默认值，
		byte,short,int,long ---- 0
		float,double ----0.0
		char----'\u0000'
		boolean----false
		数据使用完毕以后，在垃圾回收器空闲的时候回收；
	...

3.二维数组：
	元素是一维数组的数组；
	格式：  数据类型 [][] 数组名 = new 数据类型[m][n]
		数据类型 [][] 数组名 = new 数据类型[m][]
		数据类型 [][] 数组名 = new 数据类型[][]{{},{},{}}
		数据类型 [][] 数组名 = {{},{},{}}   推荐使用
4.java中的参数传递：
	基本参数：形式参数的改变不影响实际参数
	引用类型：形式参数的改变直接影响实际参数
5.面向对象：
	面向对象是基于面向过程的编程思想

	结构：  类：
		每个类中的成员变量：
		每个类中的成员方法
	类：是一组相关的属性和行为的集合，是一个抽象的概念；
	对象：是该类事物的具体存在，是一个具体的实例
	类的定义：
		成员变量：定义格式和普通的定义方式一样，位置不同，在类中，在方法外
		成员方法：定义格式和普通的定义方式一样，就是去掉了static
	类的使用：
		创建对象：类名 对象名 = new 类名（）；
		使用：
			对象名.成员变量
			对象名.成员方法（）	
